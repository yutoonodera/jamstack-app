version: "3.9"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.staging
      args:
        NEXT_PUBLIC_WORDPRESS_API_URL: ${NEXT_PUBLIC_WORDPRESS_API_URL}
        NEXT_PUBLIC_ONODY_CAT_ID: ${NEXT_PUBLIC_ONODY_CAT_ID}
        NEXT_PUBLIC_TECH_CAT_ID: ${NEXT_PUBLIC_TECH_CAT_ID}
    env_file:
      - .env.staging
    environment:
      - NODE_ENV=production
      - WORDPRESS_API_URL=http://wordpress:80
    depends_on:
      - wordpress
    networks:
      - app-network

  wordpress:
    image: wordpress:6.6-php8.2-apache
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_SITEURL: https://wp.stg.movee.jp
      WORDPRESS_HOME: https://wp.stg.movee.jp
    volumes:
      - wordpress_data:/var/www/html
    depends_on:
      - db
    networks:
      - app-network

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network

  https-portal:
    image: steveltn/https-portal:1
    ports:
      - "80:80"
      - "443:443"
    environment:
      DOMAINS: >
        stg.movee.jp -> http://web:3000,
        wp.stg.movee.jp -> http://wordpress:80
      STAGE: staging   # ← staging のときは "staging" にすると Let's Encrypt のレート制限回避できる
      HTTPS_METHOD: redirect
      FORCE_RENEW: "true" # 強制更新したいとき
    volumes:
      - https-portal-data:/var/lib/https-portal
    depends_on:
      - web
      - wordpress
    networks:
      - app-network

volumes:
  wordpress_data:
  db_data:
  https-portal-data:

networks:
  app-network:
    driver: bridge
