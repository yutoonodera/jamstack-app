name: Deploy to VPS (staging)

on:
  push:
    branches:
      - staging
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Sync files to VPS
        run: |
          rsync -avz \
            --exclude node_modules \
            --exclude .git \
            --exclude .next \
            --exclude .vscode \
            --exclude "*.log" \
            ./ ubuntu@${{ secrets.VPS_HOST }}:/home/ubuntu/staging-app/
        env:
          RSYNC_RSH: "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no"

      - name: Deploy Docker Compose (zero-downtime)
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ubuntu
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            set -eux
            cd /home/ubuntu/staging-app

            echo "===== Pull latest images ====="
            docker compose -f docker-compose.staging.yml pull

            echo "===== Build new web container with npm install ====="
            # 新しいコンテナ名で立ち上げ（web_new）
            docker compose -f docker-compose.staging.yml up -d --no-deps --build --scale web=0 web_new
            docker compose -f docker-compose.staging.yml exec -T web_new npm install

            echo "===== Health check for web_new ====="
            # 簡易チェック: 80番や Next.js ポートにアクセスできるか
            sleep 5  # 起動待ち（必要なら curl で確認）

            echo "===== Switch traffic to web_new ====="
            # 古い web コンテナ停止 & 名前を web_old に変更
            docker compose -f docker-compose.staging.yml stop web
            docker compose -f docker-compose.staging.yml rename web web_old
            docker compose -f docker-compose.staging.yml rename web_new web

            echo "===== Remove old container ====="
            docker compose -f docker-compose.staging.yml rm -f web_old

            echo "===== Deploy Complete ====="
